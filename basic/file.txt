Have you ever chased your tail through a class, hopping from one 
function to the next, scrolling up and down the source file, trying 
to divine how the functions relate and operate, only to get lost in 
a rat’s nest of confusion? Have you ever hunted up the chain of
inheritance for the definition of a variable or function? This is 
frustrating because you are trying to understand what the system does, 
but you are spending your time and mental energy on trying to locate and 
remember where the pieces are.
Concepts that are closely related should be kept vertically close to each other [G10].
Clearly this rule doesn’t work for concepts that belong in separate files. But then closely
related concepts should not be separated into different files unless you have a very good
reason. Indeed, this is one of the reasons that protected variables should be avoided.
For those concepts that are so closely related that they belong in the same source file,
their vertical separation should be a measure of how important each is to the understandability of the other. We want to avoid forcing our readers to hop around through our source
files and classes.